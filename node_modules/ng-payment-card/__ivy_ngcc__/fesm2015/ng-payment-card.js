import { Injectable, Component, EventEmitter, Output, Input, ViewEncapsulation, Pipe, NgModule } from '@angular/core';
import { FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
/**
 * Collection of validation methods
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/forms';
import * as ɵngcc2 from '@angular/common';

function PaymentCardComponent_div_35_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.ccNumMissingTxt, " ");
} }
function PaymentCardComponent_div_36_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r3.ccNumTooShortTxt, " ");
} }
function PaymentCardComponent_div_37_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r4.ccNumTooLongTxt, " ");
} }
function PaymentCardComponent_div_38_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r5.ccNumContainsLettersTxt, " ");
} }
function PaymentCardComponent_div_39_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r6.ccNumChecksumInvalidTxt, " ");
} }
function PaymentCardComponent_div_44_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r7.cardHolderMissingTxt, " ");
} }
function PaymentCardComponent_div_45_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r8.cardHolderTooLongTxt, " ");
} }
function PaymentCardComponent_option_51_Template(rf, ctx) { if (rf & 1) {
    const _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "option", 37);
    ɵngcc0.ɵɵlistener("click", function PaymentCardComponent_option_51_Template_option_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r20); ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(3); return _r0.classList.remove("hover"); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const month_r18 = ctx.$implicit;
    ɵngcc0.ɵɵpropertyInterpolate("value", month_r18);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("", month_r18, " ");
} }
function PaymentCardComponent_option_56_Template(rf, ctx) { if (rf & 1) {
    const _r23 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "option", 37);
    ɵngcc0.ɵɵlistener("click", function PaymentCardComponent_option_56_Template_option_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r23); ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(3); return _r0.classList.remove("hover"); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const year_r21 = ctx.$implicit;
    ɵngcc0.ɵɵpropertyInterpolate("value", year_r21);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("", year_r21, " ");
} }
function PaymentCardComponent_div_61_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r11 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r11.expirationMonthMissingTxt, " ");
} }
function PaymentCardComponent_div_62_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r12 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r12.expirationYearMissingTxt, " ");
} }
function PaymentCardComponent_div_63_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r13 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r13.cardExpiredTxt, " ");
} }
function PaymentCardComponent_div_64_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r14 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r14.ccvMissingTxt, " ");
} }
function PaymentCardComponent_div_65_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r15 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r15.ccvNumTooShortTxt, " ");
} }
function PaymentCardComponent_div_66_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r16 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r16.ccvNumTooLongTxt, " ");
} }
function PaymentCardComponent_div_67_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r17 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r17.ccvContainsLettersTxt, " ");
} }
class CardValidator {
    /**
     * Check if control contains numbers only
     * @param {?} abstractCtrl
     * @return {?}
     */
    static numbersOnly(abstractCtrl) {
        /** @type {?} */
        const ccNum = abstractCtrl.value;
        /** @type {?} */
        const NUMBERS_ONLY = new RegExp(/^[0-9]+$/);
        return !NUMBERS_ONLY.test(ccNum) ? CardValidator.NUMBERS_ONLY_ERR : null;
    }
    /**
     * Check checksum number in card number using Luhn algorithm
     * @param {?} abstractCtr
     * @return {?}
     */
    static checksum(abstractCtr) {
        /** @type {?} */
        const ccNumber = abstractCtr.value;
        /** @type {?} */
        const luhnArray = [0, 2, 4, 6, 8, 1, 3, 5, 7, 9];
        /** @type {?} */
        let length = ccNumber ? ccNumber.length : 0;
        /** @type {?} */
        let sum = 0;
        /** @type {?} */
        let shouldMultiply = true;
        while (length) {
            /** @type {?} */
            const val = parseInt(ccNumber.charAt(--length), 10);
            sum += (shouldMultiply = !shouldMultiply) ? luhnArray[val] : val;
        }
        return !(sum && sum % 10 === 0) ? CardValidator.CHECKSUM_INVALID : null;
    }
    /**
     * Check validity of the card
     * @param {?} formGroup
     * @return {?}
     */
    static expiration(formGroup) {
        /** @type {?} */
        const expirationMonth = Number(formGroup.get('expirationMonth').value);
        /** @type {?} */
        const expirationYear = Number(formGroup.get('expirationYear').value);
        /** @type {?} */
        const expirationDate = new Date(expirationYear, expirationMonth + 1, 0);
        return new Date().getTime() > expirationDate.getTime() ? CardValidator.CARD_EXPIRED : null;
    }
}
/**
 * Custom error for alphanumeric input
 */
CardValidator.NUMBERS_ONLY_ERR = {
    numbersOnly: true,
};
/**
 * Custom error for invalid checksum
 */
CardValidator.CHECKSUM_INVALID = {
    checksum: true,
};
/**
 * Custom error for expired card
 */
CardValidator.CARD_EXPIRED = {
    expiration: true,
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
/** @enum {string} */
const CardType = {
    AMERICAN_EXPRESS: 'American Express',
    DINERS: 'Diners',
    DINERS_CARTE_BLANCHE: 'Diners Carte Blanche',
    DISCOVER_CLUB: 'Discover Club',
    CHINA_UNIONPAY: 'China UnionPay',
    JCB: 'JCB',
    LASER: 'Laser',
    MAESTRO: 'Maestro',
    MASTERCARD: 'Mastercard',
    VISA_ELECTRON: 'Visa Electron',
    VISA: 'VISA',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
/** @type {?} */
const CARD_TYPES = new Map();
CARD_TYPES.set(CardType.AMERICAN_EXPRESS, new RegExp('^3[47]'));
CARD_TYPES.set(CardType.DINERS, new RegExp('^36'));
CARD_TYPES.set(CardType.DINERS_CARTE_BLANCHE, new RegExp('^30[0-5]'));
CARD_TYPES.set(CardType.DISCOVER_CLUB, new RegExp('^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)'));
CARD_TYPES.set(CardType.CHINA_UNIONPAY, new RegExp('^(62[0-9]{14,17})$'));
CARD_TYPES.set(CardType.JCB, new RegExp('^35(2[89]|[3-8][0-9])'));
CARD_TYPES.set(CardType.LASER, new RegExp('^(6304|6706|6709|6771)[0-9]{12,15}$'));
CARD_TYPES.set(CardType.MAESTRO, new RegExp('^(50|5[6-8]|6)[0-9]{12,19}$'));
CARD_TYPES.set(CardType.MASTERCARD, new RegExp('^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$'));
CARD_TYPES.set(CardType.VISA_ELECTRON, new RegExp('^(4026|417500|4508|4844|491([37]))'));
CARD_TYPES.set(CardType.VISA, new RegExp('^4'));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
/** @enum {string} */
const Month = {
    JANUARY: '01',
    FEBRUARY: '02',
    MARCH: '03',
    APRIL: '04',
    MAY: '05',
    JUNE: '06',
    JULY: '07',
    AUGUST: '08',
    SEPTEMBER: '09',
    OCTOBER: '10',
    NOVEMBER: '11',
    DECEMBER: '12',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
class PaymentCardService {
    /**
     * Return card type based on card number
     * @param {?} ccNum
     * @return {?}
     */
    static getCardType(ccNum) {
        for (const [key, val] of Array.from(PaymentCardService.cardTypes.entries())) {
            if (ccNum
                .split(new RegExp('[ \\-]'))
                .join('')
                .match(val)) {
                return key;
            }
        }
        return null;
    }
    /**
     * Return months in numerical format
     * @return {?}
     */
    static getMonths() {
        /** @type {?} */
        const months = [];
        for (const key of Object.keys(Month)) {
            months.push(Month[key]);
        }
        return months;
    }
    /**
     * Return years based on current year
     * @return {?}
     */
    static getYears() {
        /** @type {?} */
        const years = [];
        /** @type {?} */
        const year = new Date().getFullYear();
        for (let i = -2; i < 5; i++) {
            years.push(year + i);
        }
        return years;
    }
}
PaymentCardService.ɵfac = function PaymentCardService_Factory(t) { return new (t || PaymentCardService)(); };
PaymentCardService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PaymentCardService, factory: PaymentCardService.ɵfac });
/**
 * Collection of card types
 */
PaymentCardService.cardTypes = CARD_TYPES;
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PaymentCardService, [{
        type: Injectable
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
/**
 * NgPaymentCard without any dependencies other then ReactiveFormsModule
 */
class PaymentCardComponent {
    /**
     * @param {?} _ccService
     * @param {?} _fb
     */
    constructor(_ccService, _fb) {
        this._ccService = _ccService;
        this._fb = _fb;
        /**
         * List of months
         */
        this.months = [];
        /**
         * List of years
         */
        this.years = [];
        /**
         * Validation message for missing payment card number
         */
        this.ccNumMissingTxt = 'Card number is required';
        /**
         * Validation message for too short payment card number
         */
        this.ccNumTooShortTxt = 'Card number is too short';
        /**
         * Validation message for too long payment card number
         */
        this.ccNumTooLongTxt = 'Card number is too long';
        /**
         * Validation message for payment card number that contains characters other than digits
         */
        this.ccNumContainsLettersTxt = 'Card number can contain digits only';
        /**
         * Validation message for invalid payment card  number (Luhn's validation)
         */
        this.ccNumChecksumInvalidTxt = 'Provided card number is invalid';
        /**
         * Validation message for missing card holder name
         */
        this.cardHolderMissingTxt = 'Card holder name is required';
        /**
         * Validation message for too long card holder name
         */
        this.cardHolderTooLongTxt = 'Card holder name is too long';
        /**
         * Validation message for missing expiration month
         */
        this.expirationMonthMissingTxt = 'Expiration month is required';
        /**
         * Validation message for missing expiration year
         */
        this.expirationYearMissingTxt = 'Expiration year is required';
        /**
         * Validation message for missing CCV number
         */
        this.ccvMissingTxt = 'CCV number is required';
        /**
         * Validation message for too short CCV number
         */
        this.ccvNumTooShortTxt = 'CCV number is too short';
        /**
         * Validation message for too long CCV number
         */
        this.ccvNumTooLongTxt = 'CCV number is too long';
        /**
         * Validation message for incorrect CCV number containing characters other than digits
         */
        this.ccvContainsLettersTxt = 'CCV number can contain digits only';
        /**
         * Validation message for expired card
         */
        this.cardExpiredTxt = 'Card has expired';
        /**
         * Switch validation of the payment card number
         */
        this.validateCCNum = true;
        /**
         * Switch validation of the payment card holder
         */
        this.validateCardHolder = true;
        /**
         * Switch validation of the payment card expiration month
         */
        this.validateExpirationMonth = true;
        /**
         * Switch validation of the payment card expiration year
         */
        this.validateExpirationYear = true;
        /**
         * Switch validation of the payment card expiration
         */
        this.validateCardExpiration = true;
        /**
         * Switch validation of the payment card CCV number
         */
        this.validateCCV = true;
        /**
         * EventEmitter for payment card object
         */
        this.formSaved = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.buildForm();
        this.assignDateValues();
    }
    /**
     * Populate months and years
     * @return {?}
     */
    assignDateValues() {
        this.months = PaymentCardService.getMonths();
        this.years = PaymentCardService.getYears();
    }
    /**
     * Build reactive form
     * @return {?}
     */
    buildForm() {
        this.ccForm = this._fb.group({
            cardNumber: [
                '',
                Validators.compose([
                    Validators.required,
                    Validators.minLength(12),
                    Validators.maxLength(19),
                    CardValidator.numbersOnly,
                    CardValidator.checksum,
                ]),
            ],
            cardHolder: ['', Validators.compose([Validators.required, Validators.maxLength(22)])],
            expirationMonth: ['', Validators.required],
            expirationYear: ['', Validators.required],
            ccv: [
                '',
                Validators.compose([
                    Validators.required,
                    Validators.minLength(3),
                    Validators.maxLength(4),
                    CardValidator.numbersOnly,
                ]),
            ],
        }, {
            validator: CardValidator.expiration,
        });
    }
    /**
     * Returns payment card type based on payment card number
     * @param {?} ccNum
     * @return {?}
     */
    getCardType(ccNum) {
        return PaymentCardService.getCardType(ccNum);
    }
    /**
     * Callback function that emits payment card details after user clicks submit, or press enter
     * @return {?}
     */
    emitSavedCard() {
        /** @type {?} */
        const cardDetails = (/** @type {?} */ (this.ccForm.value));
        this.formSaved.emit(cardDetails);
    }
}
PaymentCardComponent.ɵfac = function PaymentCardComponent_Factory(t) { return new (t || PaymentCardComponent)(ɵngcc0.ɵɵdirectiveInject(PaymentCardService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormBuilder)); };
PaymentCardComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PaymentCardComponent, selectors: [["ng-payment-card"]], inputs: { ccNumMissingTxt: "ccNumMissingTxt", ccNumTooShortTxt: "ccNumTooShortTxt", ccNumTooLongTxt: "ccNumTooLongTxt", ccNumContainsLettersTxt: "ccNumContainsLettersTxt", ccNumChecksumInvalidTxt: "ccNumChecksumInvalidTxt", cardHolderMissingTxt: "cardHolderMissingTxt", cardHolderTooLongTxt: "cardHolderTooLongTxt", expirationMonthMissingTxt: "expirationMonthMissingTxt", expirationYearMissingTxt: "expirationYearMissingTxt", ccvMissingTxt: "ccvMissingTxt", ccvNumTooShortTxt: "ccvNumTooShortTxt", ccvNumTooLongTxt: "ccvNumTooLongTxt", ccvContainsLettersTxt: "ccvContainsLettersTxt", cardExpiredTxt: "cardExpiredTxt", validateCCNum: "validateCCNum", validateCardHolder: "validateCardHolder", validateExpirationMonth: "validateExpirationMonth", validateExpirationYear: "validateExpirationYear", validateCardExpiration: "validateCardExpiration", validateCCV: "validateCCV" }, outputs: { formSaved: "formSaved" }, decls: 70, vars: 30, consts: [[1, "cc-wrapper"], [1, "cc-box"], [1, "cc-box--flip"], ["ccBoxFlip", ""], [1, "cc-box__front"], [1, "cc-box__logo"], [1, "cc-box__element"], ["for", "cc-card-number-display", 1, "cc-form__label"], ["id", "cc-card-number-display", "aria-label", "Payment card number", "disabled", "disabled", 1, "cc-form__input", "cc-form__input--transparent", "cc-form__input--embosed", 3, "value"], ["for", "cc-holder-display", 1, "cc-form__label"], ["id", "cc-holder-display", "aria-label", "Card holder", "disabled", "disabled", 1, "cc-form__input", "cc-form__input--transparent", "cc-form__input--embosed", 3, "value"], ["for", "cc-valid-date-display", 1, "cc-form__label"], ["id", "cc-valid-date-display", "aria-label", "Card holder", "disabled", "disabled", 1, "cc-form__input", "cc-form__input--left-align", "cc-form__input--transparent", "cc-form__input--embosed", 3, "value"], [1, "cc-box__chip"], [1, "cc-box__back"], [1, "cc-box__strip"], ["id", "cc-ccv-display", "aria-label", "CCV", "disabled", "disabled", "title", "CCV", 1, "cc-form__input", "cc-form__input--cursive", "cc-form__input--right-align", 3, "value"], ["autocomplete", "off", 1, "cc-form", 3, "formGroup"], [1, "cc-form__wrapper--long"], ["for", "cc-number", 1, "cc-form__label", "cc-form__label--first"], ["id", "cc-number", "aria-label", "Card number", "type", "text", "title", "Card number", "maxlength", "19", "formControlName", "cardNumber", 1, "cc-form__input", 3, "focus"], ["ccNumber", ""], ["class", "cc-form__error", 4, "ngIf"], ["for", "cc-holder-name", 1, "cc-form__label"], ["id", "cc-holder-name", "aria-label", "Card holder name", "type", "text", "title", "Card holder name", "maxlength", "22", "formControlName", "cardHolder", 1, "cc-form__input", 3, "focus"], [1, "cc-form--inline"], [1, "cc-form__wrapper", "cc-form__wrapper--short"], ["for", "cc-expiration-month", 1, "cc-form__label"], ["id", "cc-expiration-month", "aria-label", "Expiration month", "formControlName", "expirationMonth", 1, "cc-form__select"], [3, "value", "click", 4, "ngFor", "ngForOf"], ["for", "cc-expiration-year", 1, "cc-form__label"], ["id", "cc-expiration-year", "aria-label", "Expiration year", "formControlName", "expirationYear", 1, "cc-form__select"], [1, "cc-form__wrapper", "cc-form__wrapper--short", "cc-form__wrapper--last"], ["for", "cc-ccv", 1, "cc-form__label"], ["id", "cc-ccv", "aria-label", "CCV", "type", "text", "title", "CCV", "minlength", "3", "maxlength", "4", "formControlName", "ccv", 1, "cc-form__input", "cc-form__input--short", 3, "focus"], ["type", "submit", "aria-label", "submit", 1, "cc-form__button", "cc-form__button--ripple", 3, "click", "keydown.enter"], [1, "cc-form__error"], [3, "value", "click"]], template: function PaymentCardComponent_Template(rf, ctx) { if (rf & 1) {
        const _r24 = ɵngcc0.ɵɵgetCurrentView();
        ɵngcc0.ɵɵelementStart(0, "section", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2, 3);
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵelementStart(5, "div", 5);
        ɵngcc0.ɵɵelementStart(6, "p");
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵpipe(8, "uppercase");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 6);
        ɵngcc0.ɵɵelement(10, "label", 7);
        ɵngcc0.ɵɵelement(11, "input", 8);
        ɵngcc0.ɵɵpipe(12, "paymentCardNumber");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "div", 6);
        ɵngcc0.ɵɵelementStart(14, "label", 9);
        ɵngcc0.ɵɵtext(15, "CARD HOLDER");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(16, "input", 10);
        ɵngcc0.ɵɵpipe(17, "uppercase");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(18, "div", 6);
        ɵngcc0.ɵɵelementStart(19, "label", 11);
        ɵngcc0.ɵɵtext(20, "VALID THRU");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(21, "input", 12);
        ɵngcc0.ɵɵpipe(22, "validThru");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(23, "div", 13);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(24, "div", 14);
        ɵngcc0.ɵɵelementStart(25, "div", 15);
        ɵngcc0.ɵɵtext(26, "\u00A0");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(27, "div", 6);
        ɵngcc0.ɵɵelement(28, "input", 16);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(29, "form", 17);
        ɵngcc0.ɵɵelementStart(30, "div", 18);
        ɵngcc0.ɵɵelementStart(31, "label", 19);
        ɵngcc0.ɵɵtext(32, "Card number");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(33, "input", 20, 21);
        ɵngcc0.ɵɵlistener("focus", function PaymentCardComponent_Template_input_focus_33_listener() { ɵngcc0.ɵɵrestoreView(_r24); const _r0 = ɵngcc0.ɵɵreference(3); return _r0.classList.remove("hover"); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(35, PaymentCardComponent_div_35_Template, 2, 1, "div", 22);
        ɵngcc0.ɵɵtemplate(36, PaymentCardComponent_div_36_Template, 2, 1, "div", 22);
        ɵngcc0.ɵɵtemplate(37, PaymentCardComponent_div_37_Template, 2, 1, "div", 22);
        ɵngcc0.ɵɵtemplate(38, PaymentCardComponent_div_38_Template, 2, 1, "div", 22);
        ɵngcc0.ɵɵtemplate(39, PaymentCardComponent_div_39_Template, 2, 1, "div", 22);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(40, "div", 18);
        ɵngcc0.ɵɵelementStart(41, "label", 23);
        ɵngcc0.ɵɵtext(42, "Card Holder name");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(43, "input", 24);
        ɵngcc0.ɵɵlistener("focus", function PaymentCardComponent_Template_input_focus_43_listener() { ɵngcc0.ɵɵrestoreView(_r24); const _r0 = ɵngcc0.ɵɵreference(3); return _r0.classList.remove("hover"); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(44, PaymentCardComponent_div_44_Template, 2, 1, "div", 22);
        ɵngcc0.ɵɵtemplate(45, PaymentCardComponent_div_45_Template, 2, 1, "div", 22);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(46, "div", 25);
        ɵngcc0.ɵɵelementStart(47, "div", 26);
        ɵngcc0.ɵɵelementStart(48, "label", 27);
        ɵngcc0.ɵɵtext(49, "Expiration month");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(50, "select", 28);
        ɵngcc0.ɵɵtemplate(51, PaymentCardComponent_option_51_Template, 2, 2, "option", 29);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(52, "div", 26);
        ɵngcc0.ɵɵelementStart(53, "label", 30);
        ɵngcc0.ɵɵtext(54, "Expiration year");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(55, "select", 31);
        ɵngcc0.ɵɵtemplate(56, PaymentCardComponent_option_56_Template, 2, 2, "option", 29);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(57, "div", 32);
        ɵngcc0.ɵɵelementStart(58, "label", 33);
        ɵngcc0.ɵɵtext(59, "ccv");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(60, "input", 34);
        ɵngcc0.ɵɵlistener("focus", function PaymentCardComponent_Template_input_focus_60_listener() { ɵngcc0.ɵɵrestoreView(_r24); const _r0 = ɵngcc0.ɵɵreference(3); return _r0.classList.add("hover"); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(61, PaymentCardComponent_div_61_Template, 2, 1, "div", 22);
        ɵngcc0.ɵɵtemplate(62, PaymentCardComponent_div_62_Template, 2, 1, "div", 22);
        ɵngcc0.ɵɵtemplate(63, PaymentCardComponent_div_63_Template, 2, 1, "div", 22);
        ɵngcc0.ɵɵtemplate(64, PaymentCardComponent_div_64_Template, 2, 1, "div", 22);
        ɵngcc0.ɵɵtemplate(65, PaymentCardComponent_div_65_Template, 2, 1, "div", 22);
        ɵngcc0.ɵɵtemplate(66, PaymentCardComponent_div_66_Template, 2, 1, "div", 22);
        ɵngcc0.ɵɵtemplate(67, PaymentCardComponent_div_67_Template, 2, 1, "div", 22);
        ɵngcc0.ɵɵelementStart(68, "button", 35);
        ɵngcc0.ɵɵlistener("click", function PaymentCardComponent_Template_button_click_68_listener() { return ctx.emitSavedCard(); })("keydown.enter", function PaymentCardComponent_Template_button_keydown_enter_68_listener() { return ctx.emitSavedCard(); });
        ɵngcc0.ɵɵtext(69, "Submit ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(34);
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(8, 22, ctx.getCardType(_r1.value)));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("value", ɵngcc0.ɵɵpipeBind1(12, 24, ctx.ccForm.get("cardNumber").value));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("value", ɵngcc0.ɵɵpipeBind1(17, 26, ctx.ccForm.get("cardHolder").value));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("value", ɵngcc0.ɵɵpipeBind1(22, 28, ctx.ccForm.get("expirationMonth").value + "/" + ctx.ccForm.get("expirationYear").value));
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵproperty("value", "CCV: " + ctx.ccForm.get("ccv").value);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("formGroup", ctx.ccForm);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("ngIf", ctx.validateCCNum && ctx.ccForm.get("cardNumber").touched && ctx.ccForm.get("cardNumber").hasError("required"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.validateCCNum && ctx.ccForm.get("cardNumber").touched && ctx.ccForm.get("cardNumber").hasError("minlength"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.validateCCNum && ctx.ccForm.get("cardNumber").touched && ctx.ccForm.get("cardNumber").hasError("maxlength"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.validateCCNum && ctx.ccForm.get("cardNumber").touched && ctx.ccForm.get("cardNumber").hasError("numbersOnly"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.validateCCNum && ctx.ccForm.get("cardNumber").touched && ctx.ccForm.get("cardNumber").hasError("checksum"));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", ctx.validateCardHolder && ctx.ccForm.get("cardHolder").touched && ctx.ccForm.get("cardHolder").hasError("required"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.validateCardHolder && ctx.ccForm.get("cardHolder").touched && ctx.ccForm.get("cardHolder").hasError("maxlength"));
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.months);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.years);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", ctx.validateExpirationMonth && ctx.ccForm.get("expirationMonth").touched && ctx.ccForm.get("expirationMonth").hasError("required"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.validateExpirationMonth && ctx.ccForm.get("expirationYear").touched && ctx.ccForm.get("expirationYear").hasError("required"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.validateCardExpiration && ctx.ccForm.get("expirationMonth").touched && ctx.ccForm.get("expirationYear").touched && ctx.ccForm.hasError("expiration"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.validateCCV && ctx.ccForm.get("ccv").touched && ctx.ccForm.get("ccv").hasError("required"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.validateCCV && ctx.ccForm.get("ccv").touched && ctx.ccForm.get("ccv").hasError("minlength"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.validateCCV && ctx.ccForm.get("ccv").touched && ctx.ccForm.get("ccv").hasError("maxlength"));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.validateCCV && ctx.ccForm.get("ccv").touched && ctx.ccForm.get("ccv").hasError("numbersOnly"));
    } }, directives: function () { return [ɵngcc1.ɵNgNoValidate, ɵngcc1.NgControlStatusGroup, ɵngcc1.FormGroupDirective, ɵngcc1.DefaultValueAccessor, ɵngcc1.MaxLengthValidator, ɵngcc1.NgControlStatus, ɵngcc1.FormControlName, ɵngcc2.NgIf, ɵngcc1.SelectControlValueAccessor, ɵngcc2.NgForOf, ɵngcc1.MinLengthValidator, ɵngcc1.NgSelectOption, ɵngcc1.ɵNgSelectMultipleOption]; }, pipes: function () { return [ɵngcc2.UpperCasePipe, PaymentCardNumberPipe, ValidThruPipe]; }, styles: ["@import url(https://fonts.googleapis.com/css?family=Inconsolata);.cc-form{align-items:center;display:flex;flex-flow:column;flex-wrap:wrap;height:100%;justify-content:center;width:100%}.cc-form--inline{align-items:inherit;display:inherit;flex-flow:row;flex-wrap:inherit;height:100%;justify-content:flex-end;margin-bottom:5%;width:100%}@media only screen and (max-width:1279px){.cc-form--inline{align-items:inherit;display:inherit;flex-flow:row;flex-wrap:inherit;height:100%;justify-content:flex-end;margin-bottom:5%;width:100%}}@media only screen and (max-width:599px){.cc-form--inline{align-items:center;display:inherit;flex-flow:column;flex-wrap:wrap;height:100%;justify-content:center;width:100%}}input[type=number]{-moz-appearance:textfield}input::-webkit-inner-spin-button,input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}@media only screen and (max-width:1919px){.cc-form__wrapper{margin-right:5%;margin-top:5%}.cc-form__wrapper--long{width:60%}.cc-form__wrapper--short{width:15%}.cc-form__wrapper--last{margin-left:5%;margin-right:20%;margin-top:30px}}@media only screen and (max-width:1279px){.cc-form__wrapper{margin-right:5%;margin-top:5%}.cc-form__wrapper--long{width:60%}.cc-form__wrapper--short{width:15%}.cc-form__wrapper--last{margin-left:5%;margin-right:20%}}@media only screen and (max-width:599px){.cc-form__wrapper{margin-right:0;margin-top:0}.cc-form__wrapper--long,.cc-form__wrapper--short{width:80%}.cc-form__wrapper--last{margin-left:0;margin-right:0}}.cc-form__label{color:rgba(0,0,0,.6);display:block;font-family:Inconsolata,Serif,serif;font-size:.7em;font-weight:400;letter-spacing:1px;line-height:10px;margin-bottom:5px;margin-top:5%;text-align:left;text-shadow:none;text-transform:uppercase;width:100%}.cc-form__label--first{margin-top:20%}.cc-form__select{-webkit-appearance:listbox;-moz-appearance:listbox;appearance:listbox}.cc-form__input,.cc-form__select{border:1px solid rgba(0,0,0,.3);border-radius:5px;box-shadow:inset 0 1px 4px rgba(0,0,0,.2);color:#333;display:block;font-size:1.2em;height:38px;margin:0;outline:0;padding:0;text-align:left;width:100%}.cc-form__input--transparent{background:0 0;border:none;border-radius:0;box-shadow:none}.cc-form__input--embosed{color:#fff;font-family:Inconsolata,monospace;font-size:2vw;text-shadow:0 2px 1px rgba(0,0,0,.3)}@media only screen and (max-width:1279px){.cc-form__input--embosed{font-size:2.5vw}}@media only screen and (max-width:599px){.cc-form__input--embosed{font-size:3vw}}.cc-form__input--cursive{font-size:.7em;font-style:italic;left:0;margin:0 auto;position:absolute}.cc-form__input--right-align{padding-right:5%;text-align:right}.cc-form__input--left-align{text-align:left}.cc-form__input:focus,.cc-form__select:focus{border-color:#41acf4}.cc-form__error{color:#ff5b5f;font-size:.7em}.cc-form__button{background:#41acf4;border:0;border-radius:3px;color:#fff;cursor:pointer;margin-bottom:5%;margin-top:1%;outline:0;overflow:hidden;padding:1%;position:relative;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:middle;white-space:nowrap;width:60%}.cc-form__button:hover{box-shadow:0 6px 8px -3px rgba(0,0,0,.3)}.cc-form__button:focus{background:#0e91ea}.cc-form__button--ripple{overflow:hidden;position:relative}.cc-form__button--ripple:after{background:rgba(255,255,255,.3);border-radius:80%;content:'';display:block;height:120px;left:50%;margin-left:-50%;margin-top:-60px;position:absolute;top:50%;-webkit-transform:scale(0);transform:scale(0);width:100%}.cc-form__button--ripple:not(:active):after{-webkit-animation:2s ease-out button-ripple;animation:2s ease-out button-ripple}@-webkit-keyframes button-ripple{0%{-webkit-transform:scale(0);transform:scale(0)}20%{-webkit-transform:scale(1);transform:scale(1)}100%{opacity:0;-webkit-transform:scale(1);transform:scale(1)}}@keyframes button-ripple{0%{-webkit-transform:scale(0);transform:scale(0)}20%{-webkit-transform:scale(1);transform:scale(1)}100%{opacity:0;-webkit-transform:scale(1);transform:scale(1)}}.cc-wrapper{background-color:#fff;border-radius:20px;height:100%;margin:0;padding:0;width:100%}.cc-box{height:100px;margin:0 auto;padding:0;position:relative;-webkit-transform:translateY(-100%);transform:translateY(-100%);width:70%;z-index:1}@media only screen and (max-width:1279px){.cc-box{-webkit-transform:translateY(-115%);transform:translateY(-115%)}}@media only screen and (max-width:599px){.cc-box{-webkit-transform:translateY(-130%);transform:translateY(-130%)}}.cc-box--flip{-webkit-transform-style:preserve-3d;transform-style:preserve-3d;transition:.6s}.cc-box--flip.hover,.cc-box--flip:hover{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}.cc-box__element{padding:0;width:80%}.cc-box__logo{align-items:center;color:#fff;display:flex;flex-flow:row nowrap;font-size:1.2em;font-style:italic;font-weight:700;justify-content:flex-end;margin-right:10%;width:100%}.cc-box__strip{background:linear-gradient(135deg,#404040,#1a1a1a);font-size:1.7em;margin:0;padding:0;position:relative;-webkit-transform:translateY(-90%);transform:translateY(-90%);width:100%}.cc-box__back,.cc-box__front{align-items:center;-webkit-backface-visibility:hidden;backface-visibility:hidden;background:linear-gradient(135deg,#bd6772,#53223f);border-radius:15px;display:flex;flex-direction:column;flex-flow:column nowrap;height:250px;justify-content:center;left:0;position:absolute;top:0;width:100%}.cc-box__front{-webkit-transform:rotateY(0);transform:rotateY(0)}.cc-box__back{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}.ng-invalid.ng-touched{border-color:#ff5b5f}.ng-valid.ng-touched{border-color:#b2b2b2}"], encapsulation: 2 });
/** @nocollapse */
PaymentCardComponent.ctorParameters = () => [
    { type: PaymentCardService },
    { type: FormBuilder }
];
PaymentCardComponent.propDecorators = {
    ccNumMissingTxt: [{ type: Input }],
    ccNumTooShortTxt: [{ type: Input }],
    ccNumTooLongTxt: [{ type: Input }],
    ccNumContainsLettersTxt: [{ type: Input }],
    ccNumChecksumInvalidTxt: [{ type: Input }],
    cardHolderMissingTxt: [{ type: Input }],
    cardHolderTooLongTxt: [{ type: Input }],
    expirationMonthMissingTxt: [{ type: Input }],
    expirationYearMissingTxt: [{ type: Input }],
    ccvMissingTxt: [{ type: Input }],
    ccvNumTooShortTxt: [{ type: Input }],
    ccvNumTooLongTxt: [{ type: Input }],
    ccvContainsLettersTxt: [{ type: Input }],
    cardExpiredTxt: [{ type: Input }],
    validateCCNum: [{ type: Input }],
    validateCardHolder: [{ type: Input }],
    validateExpirationMonth: [{ type: Input }],
    validateExpirationYear: [{ type: Input }],
    validateCardExpiration: [{ type: Input }],
    validateCCV: [{ type: Input }],
    formSaved: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PaymentCardComponent, [{
        type: Component,
        args: [{
                selector: 'ng-payment-card',
                template: "<section class=\"cc-wrapper\">\r\n  <div class=\"cc-box\">\r\n    <div #ccBoxFlip class=\"cc-box--flip\">\r\n      <div class=\"cc-box__front\">\r\n        <div class=\"cc-box__logo\">\r\n          <p>{{getCardType(ccNumber.value) | uppercase}}</p>\r\n        </div>\r\n        <div class=\"cc-box__element\">\r\n          <label class=\"cc-form__label\" for=\"cc-card-number-display\"></label>\r\n          <input class=\"cc-form__input cc-form__input--transparent cc-form__input--embosed\" id=\"cc-card-number-display\"\r\n                 aria-label=\"Payment card number\" disabled=\"disabled\"\r\n                 [value]=\"ccForm.get('cardNumber').value | paymentCardNumber\">\r\n        </div>\r\n        <div class=\"cc-box__element\">\r\n          <label class=\"cc-form__label\" for=\"cc-holder-display\">CARD HOLDER</label>\r\n          <input class=\"cc-form__input cc-form__input--transparent cc-form__input--embosed\" id=\"cc-holder-display\"\r\n                 aria-label=\"Card holder\" disabled=\"disabled\" [value]=\"ccForm.get('cardHolder').value | uppercase\">\r\n        </div>\r\n        <div class=\"cc-box__element\">\r\n          <label class=\"cc-form__label\" for=\"cc-valid-date-display\">VALID THRU</label>\r\n          <input class=\"cc-form__input cc-form__input--left-align cc-form__input--transparent cc-form__input--embosed\"\r\n                 id=\"cc-valid-date-display\" aria-label=\"Card holder\" disabled=\"disabled\"\r\n                 [value]=\"ccForm.get('expirationMonth').value + '/' + ccForm.get('expirationYear').value | validThru\">\r\n        </div>\r\n        <div class=\"cc-box__chip\"></div>\r\n      </div>\r\n      <div class=\"cc-box__back\">\r\n        <div class=\"cc-box__strip\">&nbsp;</div>\r\n        <div class=\"cc-box__element\">\r\n          <input class=\"cc-form__input cc-form__input--cursive cc-form__input--right-align\" id=\"cc-ccv-display\"\r\n                 aria-label=\"CCV\" disabled=\"disabled\"\r\n                 [value]=\"'CCV: ' + ccForm.get('ccv').value\" title=\"CCV\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <form class=\"cc-form\" [formGroup]=\"ccForm\" autocomplete=\"off\">\r\n    <div class=\"cc-form__wrapper--long\">\r\n      <label for=\"cc-number\" class=\"cc-form__label cc-form__label--first\">Card number</label>\r\n      <input #ccNumber class=\"cc-form__input\" id=\"cc-number\" aria-label=\"Card number\"\r\n             type=\"text\" title=\"Card number\" maxlength=\"19\" formControlName=\"cardNumber\"\r\n             (focus)=\"ccBoxFlip.classList.remove('hover')\">\r\n      <div class=\"cc-form__error\"\r\n           *ngIf=\"validateCCNum && ccForm.get('cardNumber').touched && ccForm.get('cardNumber').hasError('required')\">\r\n        {{ccNumMissingTxt}}\r\n      </div>\r\n      <div class=\"cc-form__error\"\r\n           *ngIf=\"validateCCNum && ccForm.get('cardNumber').touched && ccForm.get('cardNumber').hasError('minlength')\">\r\n        {{ccNumTooShortTxt}}\r\n      </div>\r\n      <div class=\"cc-form__error\"\r\n           *ngIf=\"validateCCNum && ccForm.get('cardNumber').touched && ccForm.get('cardNumber').hasError('maxlength')\">\r\n        {{ccNumTooLongTxt}}\r\n      </div>\r\n      <div class=\"cc-form__error\"\r\n           *ngIf=\"validateCCNum && ccForm.get('cardNumber').touched && ccForm.get('cardNumber').hasError('numbersOnly')\">\r\n        {{ccNumContainsLettersTxt}}\r\n      </div>\r\n      <div class=\"cc-form__error\"\r\n           *ngIf=\"validateCCNum && ccForm.get('cardNumber').touched && ccForm.get('cardNumber').hasError('checksum')\">\r\n        {{ccNumChecksumInvalidTxt}}\r\n      </div>\r\n    </div>\r\n    <div class=\"cc-form__wrapper--long\">\r\n      <label for=\"cc-holder-name\" class=\"cc-form__label\">Card Holder name</label>\r\n      <input class=\"cc-form__input\" id=\"cc-holder-name\" aria-label=\"Card holder name\" type=\"text\"\r\n             title=\"Card holder name\" maxlength=\"22\" formControlName=\"cardHolder\"\r\n             (focus)=\"ccBoxFlip.classList.remove('hover')\">\r\n      <div class=\"cc-form__error\"\r\n           *ngIf=\"validateCardHolder && ccForm.get('cardHolder').touched &&\r\n           ccForm.get('cardHolder').hasError('required')\">\r\n        {{cardHolderMissingTxt}}\r\n      </div>\r\n      <div class=\"cc-form__error\"\r\n           *ngIf=\"validateCardHolder && ccForm.get('cardHolder').touched &&\r\n           ccForm.get('cardHolder').hasError('maxlength')\">\r\n        {{cardHolderTooLongTxt}}\r\n      </div>\r\n    </div>\r\n    <div class=\"cc-form--inline\">\r\n      <div class=\"cc-form__wrapper cc-form__wrapper--short\">\r\n        <label for=\"cc-expiration-month\" class=\"cc-form__label\">Expiration month</label>\r\n        <select id=\"cc-expiration-month\" class=\"cc-form__select\" aria-label=\"Expiration month\"\r\n                formControlName=\"expirationMonth\">\r\n          <option *ngFor=\"let month of months\" value=\"{{month}}\"\r\n                  (click)=\"ccBoxFlip.classList.remove('hover')\">{{month}}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div class=\"cc-form__wrapper cc-form__wrapper--short\">\r\n        <label for=\"cc-expiration-year\" class=\"cc-form__label\">Expiration year</label>\r\n        <select id=\"cc-expiration-year\" class=\"cc-form__select\" aria-label=\"Expiration year\"\r\n                formControlName=\"expirationYear\">\r\n          <option *ngFor=\"let year of years\" value=\"{{year}}\"\r\n                  (click)=\"ccBoxFlip.classList.remove('hover')\">{{year}}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div class=\"cc-form__wrapper cc-form__wrapper--short cc-form__wrapper--last\">\r\n        <label for=\"cc-ccv\" class=\"cc-form__label\">ccv</label>\r\n        <input class=\"cc-form__input cc-form__input--short\" id=\"cc-ccv\" aria-label=\"CCV\" type=\"text\" title=\"CCV\"\r\n               minlength=\"3\" maxlength=\"4\" formControlName=\"ccv\" (focus)=\"ccBoxFlip.classList.add('hover')\">\r\n      </div>\r\n    </div>\r\n    <div class=\"cc-form__error\"\r\n         *ngIf=\"validateExpirationMonth && ccForm.get('expirationMonth').touched &&\r\n             ccForm.get('expirationMonth').hasError('required')\">\r\n      {{expirationMonthMissingTxt}}\r\n    </div>\r\n    <div class=\"cc-form__error\"\r\n         *ngIf=\"validateExpirationMonth && ccForm.get('expirationYear').touched &&\r\n             ccForm.get('expirationYear').hasError('required')\">\r\n      {{expirationYearMissingTxt}}\r\n    </div>\r\n    <div class=\"cc-form__error\" *ngIf=\"validateCardExpiration && ccForm.get('expirationMonth').touched &&\r\n    ccForm.get('expirationYear').touched && ccForm.hasError('expiration')\">\r\n      {{cardExpiredTxt}}\r\n    </div>\r\n    <div class=\"cc-form__error\"\r\n         *ngIf=\"validateCCV && ccForm.get('ccv').touched && ccForm.get('ccv').hasError('required')\">\r\n      {{ccvMissingTxt}}\r\n    </div>\r\n    <div class=\"cc-form__error\"\r\n         *ngIf=\"validateCCV && ccForm.get('ccv').touched && ccForm.get('ccv').hasError('minlength')\">\r\n      {{ccvNumTooShortTxt}}\r\n    </div>\r\n    <div class=\"cc-form__error\"\r\n         *ngIf=\"validateCCV && ccForm.get('ccv').touched && ccForm.get('ccv').hasError('maxlength')\">\r\n      {{ccvNumTooLongTxt}}\r\n    </div>\r\n    <div class=\"cc-form__error\"\r\n         *ngIf=\"validateCCV && ccForm.get('ccv').touched && ccForm.get('ccv').hasError('numbersOnly')\">\r\n      {{ccvContainsLettersTxt}}\r\n    </div>\r\n    <button type=\"submit\" class=\"cc-form__button cc-form__button--ripple\" aria-label=\"submit\" (click)=\"emitSavedCard()\"\r\n            (keydown.enter)=\"emitSavedCard()\">Submit\r\n    </button>\r\n  </form>\r\n</section>\r\n",
                encapsulation: ViewEncapsulation.None,
                styles: ["@import url(https://fonts.googleapis.com/css?family=Inconsolata);.cc-form{align-items:center;display:flex;flex-flow:column;flex-wrap:wrap;height:100%;justify-content:center;width:100%}.cc-form--inline{align-items:inherit;display:inherit;flex-flow:row;flex-wrap:inherit;height:100%;justify-content:flex-end;margin-bottom:5%;width:100%}@media only screen and (max-width:1279px){.cc-form--inline{align-items:inherit;display:inherit;flex-flow:row;flex-wrap:inherit;height:100%;justify-content:flex-end;margin-bottom:5%;width:100%}}@media only screen and (max-width:599px){.cc-form--inline{align-items:center;display:inherit;flex-flow:column;flex-wrap:wrap;height:100%;justify-content:center;width:100%}}input[type=number]{-moz-appearance:textfield}input::-webkit-inner-spin-button,input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}@media only screen and (max-width:1919px){.cc-form__wrapper{margin-right:5%;margin-top:5%}.cc-form__wrapper--long{width:60%}.cc-form__wrapper--short{width:15%}.cc-form__wrapper--last{margin-left:5%;margin-right:20%;margin-top:30px}}@media only screen and (max-width:1279px){.cc-form__wrapper{margin-right:5%;margin-top:5%}.cc-form__wrapper--long{width:60%}.cc-form__wrapper--short{width:15%}.cc-form__wrapper--last{margin-left:5%;margin-right:20%}}@media only screen and (max-width:599px){.cc-form__wrapper{margin-right:0;margin-top:0}.cc-form__wrapper--long,.cc-form__wrapper--short{width:80%}.cc-form__wrapper--last{margin-left:0;margin-right:0}}.cc-form__label{color:rgba(0,0,0,.6);display:block;font-family:Inconsolata,Serif,serif;font-size:.7em;font-weight:400;letter-spacing:1px;line-height:10px;margin-bottom:5px;margin-top:5%;text-align:left;text-shadow:none;text-transform:uppercase;width:100%}.cc-form__label--first{margin-top:20%}.cc-form__select{-webkit-appearance:listbox;-moz-appearance:listbox;appearance:listbox}.cc-form__input,.cc-form__select{border:1px solid rgba(0,0,0,.3);border-radius:5px;box-shadow:inset 0 1px 4px rgba(0,0,0,.2);color:#333;display:block;font-size:1.2em;height:38px;margin:0;outline:0;padding:0;text-align:left;width:100%}.cc-form__input--transparent{background:0 0;border:none;border-radius:0;box-shadow:none}.cc-form__input--embosed{color:#fff;font-family:Inconsolata,monospace;font-size:2vw;text-shadow:0 2px 1px rgba(0,0,0,.3)}@media only screen and (max-width:1279px){.cc-form__input--embosed{font-size:2.5vw}}@media only screen and (max-width:599px){.cc-form__input--embosed{font-size:3vw}}.cc-form__input--cursive{font-size:.7em;font-style:italic;left:0;margin:0 auto;position:absolute}.cc-form__input--right-align{padding-right:5%;text-align:right}.cc-form__input--left-align{text-align:left}.cc-form__input:focus,.cc-form__select:focus{border-color:#41acf4}.cc-form__error{color:#ff5b5f;font-size:.7em}.cc-form__button{background:#41acf4;border:0;border-radius:3px;color:#fff;cursor:pointer;margin-bottom:5%;margin-top:1%;outline:0;overflow:hidden;padding:1%;position:relative;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:middle;white-space:nowrap;width:60%}.cc-form__button:hover{box-shadow:0 6px 8px -3px rgba(0,0,0,.3)}.cc-form__button:focus{background:#0e91ea}.cc-form__button--ripple{overflow:hidden;position:relative}.cc-form__button--ripple:after{background:rgba(255,255,255,.3);border-radius:80%;content:'';display:block;height:120px;left:50%;margin-left:-50%;margin-top:-60px;position:absolute;top:50%;-webkit-transform:scale(0);transform:scale(0);width:100%}.cc-form__button--ripple:not(:active):after{-webkit-animation:2s ease-out button-ripple;animation:2s ease-out button-ripple}@-webkit-keyframes button-ripple{0%{-webkit-transform:scale(0);transform:scale(0)}20%{-webkit-transform:scale(1);transform:scale(1)}100%{opacity:0;-webkit-transform:scale(1);transform:scale(1)}}@keyframes button-ripple{0%{-webkit-transform:scale(0);transform:scale(0)}20%{-webkit-transform:scale(1);transform:scale(1)}100%{opacity:0;-webkit-transform:scale(1);transform:scale(1)}}.cc-wrapper{background-color:#fff;border-radius:20px;height:100%;margin:0;padding:0;width:100%}.cc-box{height:100px;margin:0 auto;padding:0;position:relative;-webkit-transform:translateY(-100%);transform:translateY(-100%);width:70%;z-index:1}@media only screen and (max-width:1279px){.cc-box{-webkit-transform:translateY(-115%);transform:translateY(-115%)}}@media only screen and (max-width:599px){.cc-box{-webkit-transform:translateY(-130%);transform:translateY(-130%)}}.cc-box--flip{-webkit-transform-style:preserve-3d;transform-style:preserve-3d;transition:.6s}.cc-box--flip.hover,.cc-box--flip:hover{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}.cc-box__element{padding:0;width:80%}.cc-box__logo{align-items:center;color:#fff;display:flex;flex-flow:row nowrap;font-size:1.2em;font-style:italic;font-weight:700;justify-content:flex-end;margin-right:10%;width:100%}.cc-box__strip{background:linear-gradient(135deg,#404040,#1a1a1a);font-size:1.7em;margin:0;padding:0;position:relative;-webkit-transform:translateY(-90%);transform:translateY(-90%);width:100%}.cc-box__back,.cc-box__front{align-items:center;-webkit-backface-visibility:hidden;backface-visibility:hidden;background:linear-gradient(135deg,#bd6772,#53223f);border-radius:15px;display:flex;flex-direction:column;flex-flow:column nowrap;height:250px;justify-content:center;left:0;position:absolute;top:0;width:100%}.cc-box__front{-webkit-transform:rotateY(0);transform:rotateY(0)}.cc-box__back{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}.ng-invalid.ng-touched{border-color:#ff5b5f}.ng-valid.ng-touched{border-color:#b2b2b2}"]
            }]
    }], function () { return [{ type: PaymentCardService }, { type: ɵngcc1.FormBuilder }]; }, { ccNumMissingTxt: [{
            type: Input
        }], ccNumTooShortTxt: [{
            type: Input
        }], ccNumTooLongTxt: [{
            type: Input
        }], ccNumContainsLettersTxt: [{
            type: Input
        }], ccNumChecksumInvalidTxt: [{
            type: Input
        }], cardHolderMissingTxt: [{
            type: Input
        }], cardHolderTooLongTxt: [{
            type: Input
        }], expirationMonthMissingTxt: [{
            type: Input
        }], expirationYearMissingTxt: [{
            type: Input
        }], ccvMissingTxt: [{
            type: Input
        }], ccvNumTooShortTxt: [{
            type: Input
        }], ccvNumTooLongTxt: [{
            type: Input
        }], ccvContainsLettersTxt: [{
            type: Input
        }], cardExpiredTxt: [{
            type: Input
        }], validateCCNum: [{
            type: Input
        }], validateCardHolder: [{
            type: Input
        }], validateExpirationMonth: [{
            type: Input
        }], validateExpirationYear: [{
            type: Input
        }], validateCardExpiration: [{
            type: Input
        }], validateCCV: [{
            type: Input
        }], formSaved: [{
            type: Output
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
class PaymentCardNumberPipe {
    /**
     * Transform card number to card format for known numbers
     * @param {?} value
     * @return {?}
     */
    transform(value) {
        switch (value.length) {
            case 15:
                value = value.replace(/\b(\d{4})/, '$1-');
                value = value.replace(/-(\d{6})/, '-$1-');
                return value;
            case 16:
                return value.match(/.{4}/g).join('-');
            default:
                return value;
        }
    }
}
PaymentCardNumberPipe.ɵfac = function PaymentCardNumberPipe_Factory(t) { return new (t || PaymentCardNumberPipe)(); };
PaymentCardNumberPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: "paymentCardNumber", type: PaymentCardNumberPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PaymentCardNumberPipe, [{
        type: Pipe,
        args: [{
                name: 'paymentCardNumber'
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
class ValidThruPipe {
    /**
     * Transform month and year into card format
     * @param {?} value
     * @return {?}
     */
    transform(value) {
        return value && value.length === 7 ? value.substr(0, 3) + value.substr(5) : '/';
    }
}
ValidThruPipe.ɵfac = function ValidThruPipe_Factory(t) { return new (t || ValidThruPipe)(); };
ValidThruPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: "validThru", type: ValidThruPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ValidThruPipe, [{
        type: Pipe,
        args: [{
                name: 'validThru'
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
/**
 * Monolithic module that is being bundled and published.
 * Depends only on ReactiveFormsModule and CommonModule.
 */
class NgPaymentCardModule {
}
NgPaymentCardModule.ɵfac = function NgPaymentCardModule_Factory(t) { return new (t || NgPaymentCardModule)(); };
NgPaymentCardModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgPaymentCardModule });
NgPaymentCardModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [PaymentCardService], imports: [[ReactiveFormsModule, CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgPaymentCardModule, [{
        type: NgModule,
        args: [{
                imports: [ReactiveFormsModule, CommonModule],
                declarations: [PaymentCardComponent, PaymentCardNumberPipe, ValidThruPipe],
                providers: [PaymentCardService],
                exports: [PaymentCardComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgPaymentCardModule, { declarations: function () { return [PaymentCardComponent, PaymentCardNumberPipe, ValidThruPipe]; }, imports: function () { return [ReactiveFormsModule, CommonModule]; }, exports: function () { return [PaymentCardComponent]; } }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */

export { PaymentCardComponent, NgPaymentCardModule, PaymentCardNumberPipe as ɵb, ValidThruPipe as ɵc, PaymentCardService as ɵa };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,