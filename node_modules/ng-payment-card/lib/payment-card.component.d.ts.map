{"version":3,"file":"payment-card.component.d.ts","sources":["payment-card.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ICardDetails } from './domain/i-card-details';\r\nimport { PaymentCardService } from './service/payment-card.service';\r\n/**\r\n * NgPaymentCard without any dependencies other then ReactiveFormsModule\r\n */\r\nexport declare class PaymentCardComponent implements OnInit {\r\n    private _ccService;\r\n    private _fb;\r\n    /**\r\n     * FormGroup available publicly\r\n     */\r\n    ccForm: FormGroup;\r\n    /**\r\n     * List of months\r\n     */\r\n    months: Array<string>;\r\n    /**\r\n     * List of years\r\n     */\r\n    years: Array<number>;\r\n    /**\r\n     * Validation message for missing payment card number\r\n     */\r\n    ccNumMissingTxt?: string;\r\n    /**\r\n     * Validation message for too short payment card number\r\n     */\r\n    ccNumTooShortTxt?: string;\r\n    /**\r\n     * Validation message for too long payment card number\r\n     */\r\n    ccNumTooLongTxt?: string;\r\n    /**\r\n     * Validation message for payment card number that contains characters other than digits\r\n     */\r\n    ccNumContainsLettersTxt?: string;\r\n    /**\r\n     * Validation message for invalid payment card  number (Luhn's validation)\r\n     */\r\n    ccNumChecksumInvalidTxt?: string;\r\n    /**\r\n     * Validation message for missing card holder name\r\n     */\r\n    cardHolderMissingTxt?: string;\r\n    /**\r\n     * Validation message for too long card holder name\r\n     */\r\n    cardHolderTooLongTxt?: string;\r\n    /**\r\n     * Validation message for missing expiration month\r\n     */\r\n    expirationMonthMissingTxt?: string;\r\n    /**\r\n     * Validation message for missing expiration year\r\n     */\r\n    expirationYearMissingTxt?: string;\r\n    /**\r\n     * Validation message for missing CCV number\r\n     */\r\n    ccvMissingTxt?: string;\r\n    /**\r\n     * Validation message for too short CCV number\r\n     */\r\n    ccvNumTooShortTxt?: string;\r\n    /**\r\n     * Validation message for too long CCV number\r\n     */\r\n    ccvNumTooLongTxt?: string;\r\n    /**\r\n     * Validation message for incorrect CCV number containing characters other than digits\r\n     */\r\n    ccvContainsLettersTxt?: string;\r\n    /**\r\n     * Validation message for expired card\r\n     */\r\n    cardExpiredTxt?: string;\r\n    /**\r\n     * Switch validation of the payment card number\r\n     */\r\n    validateCCNum?: boolean;\r\n    /**\r\n     * Switch validation of the payment card holder\r\n     */\r\n    validateCardHolder?: boolean;\r\n    /**\r\n     * Switch validation of the payment card expiration month\r\n     */\r\n    validateExpirationMonth?: boolean;\r\n    /**\r\n     * Switch validation of the payment card expiration year\r\n     */\r\n    validateExpirationYear?: boolean;\r\n    /**\r\n     * Switch validation of the payment card expiration\r\n     */\r\n    validateCardExpiration?: boolean;\r\n    /**\r\n     * Switch validation of the payment card CCV number\r\n     */\r\n    validateCCV?: boolean;\r\n    /**\r\n     * EventEmitter for payment card object\r\n     */\r\n    formSaved: EventEmitter<ICardDetails>;\r\n    constructor(_ccService: PaymentCardService, _fb: FormBuilder);\r\n    ngOnInit(): void;\r\n    /**\r\n     * Populate months and years\r\n     */\r\n    private assignDateValues;\r\n    /**\r\n     * Build reactive form\r\n     */\r\n    private buildForm;\r\n    /**\r\n     * Returns payment card type based on payment card number\r\n     */\r\n    getCardType(ccNum: string): string | null;\r\n    /**\r\n     * Callback function that emits payment card details after user clicks submit, or press enter\r\n     */\r\n    emitSavedCard(): void;\r\n}\r\n"]}